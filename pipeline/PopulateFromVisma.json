{
	"name": "PopulateFromVisma",
	"properties": {
		"activities": [
			{
				"name": "VismaPages",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "VismaPages",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Lookup total pages",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "VismaPages",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT * FROM dbo.Pages  WHERE TableName LIKE 'VismaExtraTest';",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "PagesPimcore",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set TotalPages",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup total pages",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "TotalPages",
					"value": {
						"value": "@string(activity('Lookup total pages').output.firstRow.TotalPages)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Set TotalPages",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(int(variables('Page')), int(variables('TotalPages')))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "VismaInventory",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:10:00",
									"requestInterval": "00.00:00:00.002",
									"requestMethod": "GET",
									"additionalHeaders": {
										"ipp-application-type": "Visma.net Financials",
										"ipp-company-id": "3464226",
										"Authorization": "Bearer c5b7d8ba-4cf8-4312-a520-6709738cae9c"
									},
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['inventoryNumber']"
											},
											"sink": {
												"name": "ItemSKU",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['lastCost']"
											},
											"sink": {
												"name": "DefaultPrice",
												"type": "Double"
											}
										},
										{
											"source": {
												"path": "$['description']"
											},
											"sink": {
												"name": "Description",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['lastModifiedDateTime']"
											},
											"sink": {
												"name": "modificationDate",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['stockItem']"
											},
											"sink": {
												"name": "IteminStock",
												"type": "String"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "VismaInventory",
									"type": "DatasetReference",
									"parameters": {
										"Page": {
											"value": "@variables('Page')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "VismaDB",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Set variable Help",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "VismaInventory",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Help",
								"value": {
									"value": "@string(add(int(variables('Page')),1))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable Page",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set variable Help",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Page",
								"value": {
									"value": "@variables('Help')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Wait1",
							"type": "Wait",
							"dependsOn": [
								{
									"activity": "Set variable Page",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 150
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "DeleteDuplicates",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Until1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[DeleteDuplicates]",
					"storedProcedureParameters": {
						"field1": {
							"value": "ItemSKU",
							"type": "String"
						},
						"field2": {
							"value": "IteminStock",
							"type": "String"
						},
						"tblName": {
							"value": "dbo.VismaExtraTest",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ExtraLeker",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT *\n  FROM [dbo].[Pimcore]\n  WHERE ItemInStock IS NOT NULL\n  AND ID LIKE '%1111'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ExtraTest",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "UpdateItemInStockPIM",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://pim.extra-leker.no/pimcore-graphql-webservices/products?apikey=c863868b01b24112638c18a2f5380532",
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"body": {
									"value": "@concat('{\"query\":\"mutation {\\r\\n  updateProdukt(id:',item().ID,', input: {ItemInStock:true) {\\r\\n    success\\r\\n    message\\r\\n  }\\r\\n}\",\"variables\":{}}')",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "UpdateItemPIM",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DeleteDuplicates",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdatePIMcoreItemStock]"
				},
				"linkedServiceName": {
					"referenceName": "ExtraLeker",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"TotalPages": {
				"type": "String"
			},
			"Page": {
				"type": "String",
				"defaultValue": "27"
			},
			"Help": {
				"type": "String"
			}
		},
		"annotations": []
	}
}