{
	"name": "Tunnels_Daily",
	"properties": {
		"activities": [
			{
				"name": "UntilToday",
				"type": "Until",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(int(variables('hours')), 23)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "TunnelFlow",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "1.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "Tunnels",
									"type": "DataFlowReference",
									"parameters": {
										"Hours": {
											"value": "'@{variables('Hours')}'",
											"type": "Expression"
										},
										"Day": {
											"value": "'@{variables('Day')}'",
											"type": "Expression"
										},
										"Month": {
											"value": "'@{formatDateTime(adddays(utcnow(),-1),'MM')}'",
											"type": "Expression"
										},
										"Year": {
											"value": "'@{formatDateTime(adddays(utcnow(),-1),'yyyy')}'",
											"type": "Expression"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Day",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(int(variables('Hours')),9)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "new time2",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "New Time",
											"value": {
												"value": "@concat('0',string(int(variables('Hours'))))",
												"type": "Expression"
											}
										}
									},
									{
										"name": "time2",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "new time2",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "Hours",
											"value": {
												"value": "@variables('New Time')",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "new time",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "TunnelFlow",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "New Time",
								"value": {
									"value": "@variables('Hours')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Time",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "new time",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Hours",
								"value": {
									"value": "@string(add(int(variables('New Time')),3))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Day",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Day",
								"value": {
									"value": "@formatDateTime(utcnow(),'dd')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "new time_copy1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "TunnelFlow",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "New Time",
								"value": {
									"value": "@variables('Hours')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Time_copy1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "new time_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Hours",
								"value": {
									"value": "@string(add(int(variables('New Time')),1))",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Delete Duplicated",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "UntilToday",
						"dependencyConditions": [
							"Succeeded",
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[DeleteDuplicates]",
					"storedProcedureParameters": {
						"field1": {
							"value": "[Key]",
							"type": "String"
						},
						"field2": {
							"value": "[Pc1]",
							"type": "String"
						},
						"tblName": {
							"value": "[dbo].[Tunnels]",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Ditio",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Tunnels_unpivot",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Delete Duplicated",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "Tunnels_Unpivot",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Check_Data",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Tunnels_unpivot",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT Count (*) ',\n'FROM [dbo].[Tunnels]', \n'WHERE Date LIKE ',decodeBase64('Jw=='),formatDateTime(adddays(utcnow(),-1), 'MM/dd/yyyy'),decodeBase64('Jw=='))",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Tunnels",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If empty data Yesterday",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check_Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(int(split(split(string(activity('Check_Data').output.firstRow),':')[1],'}')[0]),0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Send Mail",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://tunnel-datacheck.azurewebsites.net:443/api/test/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=5tmPRHEQHmlXO0vqiw8H0GPiJDpmxxiq5mR7KCIMxD8",
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"body": {
									"DataFactoryName": "Data Factory BI_ Report RISA",
									"PipelineName": "Tunnels",
									"Subject": "RISA-Tunnel - Empty data for yesterday",
									"Errormessage": "Dont are any data on the SQL Data base for yesterday",
									"EmailTo": "powerbi@dataplan.no"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"Hours": {
				"type": "String",
				"defaultValue": "0"
			},
			"New Time": {
				"type": "String",
				"defaultValue": "0"
			},
			"Day": {
				"type": "String"
			},
			"Check": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Tunnels"
		},
		"annotations": [],
		"lastPublishTime": "2021-10-06T09:12:28Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}